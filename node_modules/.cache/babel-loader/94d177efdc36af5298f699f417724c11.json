{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/components/Autocomplete.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Autocomplete = _ref => {\n  _s();\n\n  let {\n    suggestions\n  } = _ref;\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n  const [activeSuggestionsIndex, setActiveSuggestionsIndex] = useState(0);\n  const [showSuggestions, setShowSuggestions] = useState(false);\n  const [input, setInput] = useSate(\"\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"type a name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Autocomplete, \"VREgl9WlY25si/Qgs11p9n5v2eE=\", true);\n\n_c = Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/components/Autocomplete.js"],"names":["useState","Autocomplete","suggestions","filteredSuggestions","setFilteredSuggestions","activeSuggestionsIndex","setActiveSuggestionsIndex","showSuggestions","setShowSuggestions","input","setInput","useSate"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAE7C,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDJ,QAAQ,CAAC,EAAD,CAA9D;AACA,QAAM,CAACK,sBAAD,EAAyBC,yBAAzB,IAAsDN,QAAQ,CAAC,CAAD,CAApE;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBC,OAAO,CAAC,EAAD,CAAjC;AACA,sBACI;AAAA,2BACI;AACI,MAAA,IAAI,EAAC,MADT;AACgB,MAAA,WAAW,EAAC;AAD5B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAOH,CAbM;;GAAMV,Y;;KAAAA,Y","sourcesContent":["import { useState } from 'react';\n\nexport const Autocomplete = ({ suggestions }) => {\n\n    const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n    const [activeSuggestionsIndex, setActiveSuggestionsIndex] = useState(0);\n    const [showSuggestions, setShowSuggestions] = useState(false)\n    const [input, setInput] = useSate(\"\");\n    return (\n        <>\n            <input\n                type=\"text\" placeholder=\"type a name\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}