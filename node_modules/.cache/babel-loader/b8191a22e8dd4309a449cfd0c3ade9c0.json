{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Github-sbuijs/react-search-find-experiment/src/components/AutoComplete.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useMemo } from 'react';\nimport { SuggestionsListComponent } from './SuggestionsListComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AutoComplete = _ref => {\n  _s();\n\n  let {\n    suggestions,\n    onSearchTerm,\n    onKeyDown\n  } = _ref;\n  //input field value\n  const [searchInput, setSearchInput] = useState(\"\"); //show/hide the suggestions\n\n  const [showSuggestions, setShowSuggestions] = useState(false); //index of selected suggestion in suggestions list\n\n  const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n  const filteredSuggestions = useMemo(() => {\n    return suggestions.filter(suggestion => suggestion.toLowerCase().includes(searchInput.toLowerCase()));\n  }, [suggestions, searchInput]); //when the user changes the input value this method will fire\n\n  const handleInput = e => {\n    e.preventDefault(); //what the user types in the searchbar\n\n    const userInput = e.target.value; //search input field gets filled with what the user types in field\n\n    setSearchInput(userInput); //set the search term with the user input\n\n    onSearchTerm(userInput); // setFilteredSuggestions(currentSuggestions)\n\n    setActiveSuggestionIndex(0);\n    setShowSuggestions(true);\n  }; //event that will be emitted when a user clicks on a suggestion\n\n\n  const setSuggestion = suggestion => {\n    //add the suggestion to the searchInput field\n    setSearchInput(suggestion); //pass suggestion to the searchTerm\n\n    onSearchTerm(suggestion); // console.log(suggestion);\n    //empty filtered suggestions \n    // setFilteredSuggestions([]);\n    //reset the active suggestion index to 0\n\n    setActiveSuggestionIndex(0); //hide the suggestions list\n\n    setShowSuggestions(false);\n  }; // const onKeyDown = (e) => {\n  //     if (e.keyCode === 13) {\n  //         //on enter\n  //         //get the value of the selected suggestion\n  //         const suggestion = filteredSuggestions[activeSuggestionIndex]\n  //         //push it to the setSuggestion()\n  //         setSuggestion(suggestion)\n  //     } else if (e.keyCode === 38) {\n  //         //on arrow up\n  //         if (activeSuggestionIndex <= 0) {\n  //             //do nothing\n  //             return\n  //         } if (activeSuggestionIndex > 0) {\n  //             //increment index with one\n  //             setActiveSuggestionIndex(activeSuggestionIndex - 1)\n  //         }\n  //     } else if (e.keyCode === 40) {\n  //         //on  arrow down\n  //         if (activeSuggestionIndex <= filteredSuggestions.length - 2) {\n  //             //increment index with one\n  //             setActiveSuggestionIndex(activeSuggestionIndex + 1)\n  //         }\n  //     }\n  // }\n\n\n  const handleKeyDown = e => {\n    console.log(e);\n    onKeyDown(e.keyCode);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      autoComplete: \"off\",\n      id: \"search-field\" // onKeyDown={(e) => onKeyDown(e)}\n      ,\n      onKeyDown: e => handleKeyDown(e),\n      value: searchInput,\n      onChange: e => handleInput(e),\n      placeholder: \"Vul hier de plaatsnaam in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), showSuggestions && searchInput && /*#__PURE__*/_jsxDEV(SuggestionsListComponent, {\n      filteredSuggestions: filteredSuggestions,\n      activeSuggestionIndex: activeSuggestionIndex,\n      onClick: s => setSuggestion(s),\n      searchInput: searchInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AutoComplete, \"W23vP/sRSlC0ei2G9ItKD81ZvII=\");\n\n_c = AutoComplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"AutoComplete\");","map":{"version":3,"sources":["/Users/steef/Documents/Github-sbuijs/react-search-find-experiment/src/components/AutoComplete.js"],"names":["useState","useMemo","SuggestionsListComponent","AutoComplete","suggestions","onSearchTerm","onKeyDown","searchInput","setSearchInput","showSuggestions","setShowSuggestions","activeSuggestionIndex","setActiveSuggestionIndex","filteredSuggestions","filter","suggestion","toLowerCase","includes","handleInput","e","preventDefault","userInput","target","value","setSuggestion","handleKeyDown","console","log","keyCode","s"],"mappings":"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","sourcesContent":["import { useState, useMemo } from 'react';\nimport { SuggestionsListComponent } from './SuggestionsListComponent'\n\nexport const AutoComplete = ({ suggestions, onSearchTerm, onKeyDown }) => {\n\n    //input field value\n    const [searchInput, setSearchInput] = useState(\"\");\n\n    //show/hide the suggestions\n    const [showSuggestions, setShowSuggestions] = useState(false);\n\n    //index of selected suggestion in suggestions list\n    const [activeSuggestionIndex, setActiveSuggestionIndex] = useState(0);\n\n    const filteredSuggestions = useMemo(() => {\n        return suggestions.filter(\n            (suggestion) =>\n                suggestion.toLowerCase().includes(searchInput.toLowerCase())\n        );\n    }, [suggestions, searchInput]);\n\n    //when the user changes the input value this method will fire\n    const handleInput = (e) => {\n        e.preventDefault()\n\n        //what the user types in the searchbar\n        const userInput = e.target.value;\n        //search input field gets filled with what the user types in field\n        setSearchInput(userInput);\n\n        //set the search term with the user input\n        onSearchTerm(userInput);\n\n        // setFilteredSuggestions(currentSuggestions)\n        setActiveSuggestionIndex(0)\n        setShowSuggestions(true)\n    }\n\n\n    //event that will be emitted when a user clicks on a suggestion\n    const setSuggestion = (suggestion) => {\n        //add the suggestion to the searchInput field\n        setSearchInput(suggestion)\n\n        //pass suggestion to the searchTerm\n        onSearchTerm(suggestion);\n        // console.log(suggestion);\n\n        //empty filtered suggestions \n        // setFilteredSuggestions([]);\n        //reset the active suggestion index to 0\n        setActiveSuggestionIndex(0)\n        //hide the suggestions list\n        setShowSuggestions(false)\n    }\n\n\n    // const onKeyDown = (e) => {\n    //     if (e.keyCode === 13) {\n    //         //on enter\n    //         //get the value of the selected suggestion\n    //         const suggestion = filteredSuggestions[activeSuggestionIndex]\n    //         //push it to the setSuggestion()\n    //         setSuggestion(suggestion)\n\n\n    //     } else if (e.keyCode === 38) {\n    //         //on arrow up\n    //         if (activeSuggestionIndex <= 0) {\n    //             //do nothing\n    //             return\n    //         } if (activeSuggestionIndex > 0) {\n    //             //increment index with one\n    //             setActiveSuggestionIndex(activeSuggestionIndex - 1)\n    //         }\n    //     } else if (e.keyCode === 40) {\n    //         //on  arrow down\n    //         if (activeSuggestionIndex <= filteredSuggestions.length - 2) {\n    //             //increment index with one\n    //             setActiveSuggestionIndex(activeSuggestionIndex + 1)\n    //         }\n    //     }\n    // }\n\n    const handleKeyDown = (e) => {\n        console.log(e);\n        onKeyDown(e.keyCode)\n\n    }\n\n    return (\n        <>\n            <input\n                type=\"text\"\n                className=\"form-control\"\n                autoComplete=\"off\"\n                id=\"search-field\"\n                // onKeyDown={(e) => onKeyDown(e)}\n                onKeyDown={(e) => handleKeyDown(e)}\n                value={searchInput}\n                onChange={(e) => handleInput(e)}\n                placeholder='Vul hier de plaatsnaam in'\n            />\n            {showSuggestions && searchInput &&\n                <SuggestionsListComponent\n                    filteredSuggestions={filteredSuggestions}\n                    activeSuggestionIndex={activeSuggestionIndex}\n                    onClick={s => setSuggestion(s)}\n                    searchInput={searchInput}\n                />}\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}