{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { SearchComponent } from './components/SearchComponent';\nimport { ListOfEntries } from './components/ListOfEntries';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Timeline } from 'gsap/gsap-core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [advisorsArray, setAdvisorsArray] = useState([]);\n  const [tableTitles, setTableTitles] = useState([]); // only works when the file is in the public folder\n\n  function getData() {\n    fetch('/data/advisors_10000.csv').then(response => response.text()).then(csv => {\n      //split the data based on the line break, and remove the first row\n      const titles = csv.split('\\n').slice(0, 1);\n      const title = titles.split(';');\n      console.log(titles);\n      let titlesArray = [];\n      titles.forEach(element => {\n        const title = element.split(';');\n        titlesArray.push(title);\n      });\n      setTableTitles(titlesArray);\n      const advisors = csv.split('\\n').slice(1); //array to save all the objects in\n\n      const advisorsArray = []; //split the rows into each one of the fields\n\n      advisors.forEach(element => {\n        const advisorData = element.split(';');\n        let advisor = {\n          id: uuidv4(),\n          Bedrijfsnaam: advisorData[0],\n          Adres: advisorData[1],\n          Postcode: advisorData[2],\n          Woonplaats: advisorData[3],\n          Website: advisorData[4]\n        };\n        advisorsArray.push(advisor);\n      }); //set the array\n\n      setAdvisorsArray(advisorsArray);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListOfEntries, {\n      tableTitles: tableTitles,\n      advisorsArray: advisorsArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0jDR0h7bpGXOWO34NZ7Zu5jmqnI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js"],"names":["SearchComponent","ListOfEntries","useState","useEffect","v4","uuidv4","Timeline","App","advisorsArray","setAdvisorsArray","tableTitles","setTableTitles","getData","fetch","then","response","text","csv","titles","split","slice","title","console","log","titlesArray","forEach","element","push","advisors","advisorData","advisor","id","Bedrijfsnaam","Adres","Postcode","Woonplaats","Website"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,eAAT,QAAgC,8BAAhC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCT,QAAQ,CAAC,EAAD,CAA9C,CAHa,CAMb;;AACA,WAASU,OAAT,GAAmB;AACjBC,IAAAA,KAAK,CAAC,0BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,GAAG,IAAI;AAEX;AACA,YAAMC,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAAf;AACA,YAAMC,KAAK,GAAGH,MAAM,CAACC,KAAP,CAAa,GAAb,CAAd;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,UAAIM,WAAW,GAAG,EAAlB;AACAN,MAAAA,MAAM,CAACO,OAAP,CAAeC,OAAO,IAAI;AACxB,cAAML,KAAK,GAAGK,OAAO,CAACP,KAAR,CAAc,GAAd,CAAd;AACAK,QAAAA,WAAW,CAACG,IAAZ,CAAiBN,KAAjB;AACD,OAHD;AAKAV,MAAAA,cAAc,CAACa,WAAD,CAAd;AAEA,YAAMI,QAAQ,GAAGX,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgBC,KAAhB,CAAsB,CAAtB,CAAjB,CAfW,CAiBX;;AACA,YAAMZ,aAAa,GAAG,EAAtB,CAlBW,CAoBX;;AAEAoB,MAAAA,QAAQ,CAACH,OAAT,CAAiBC,OAAO,IAAI;AAC1B,cAAMG,WAAW,GAAGH,OAAO,CAACP,KAAR,CAAc,GAAd,CAApB;AACA,YAAIW,OAAO,GAAG;AACZC,UAAAA,EAAE,EAAE1B,MAAM,EADE;AAEZ2B,UAAAA,YAAY,EAAEH,WAAW,CAAC,CAAD,CAFb;AAGZI,UAAAA,KAAK,EAAEJ,WAAW,CAAC,CAAD,CAHN;AAIZK,UAAAA,QAAQ,EAAEL,WAAW,CAAC,CAAD,CAJT;AAKZM,UAAAA,UAAU,EAAEN,WAAW,CAAC,CAAD,CALX;AAMZO,UAAAA,OAAO,EAAEP,WAAW,CAAC,CAAD;AANR,SAAd;AAQArB,QAAAA,aAAa,CAACmB,IAAd,CAAmBG,OAAnB;AACD,OAXD,EAtBW,CAmCX;;AACArB,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AAED,KAxCH;AAyCD;;AAIDL,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,aAAD;AAAe,MAAA,WAAW,EAAEF,WAA5B;AAAyC,MAAA,aAAa,EAAEF;AAAxD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhEQD,G;;KAAAA,G;AAkET,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { SearchComponent } from './components/SearchComponent'\nimport { ListOfEntries } from './components/ListOfEntries';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Timeline } from 'gsap/gsap-core';\n\nfunction App() {\n\n  const [advisorsArray, setAdvisorsArray] = useState([]);\n  const [tableTitles, setTableTitles] = useState([]);\n\n\n  // only works when the file is in the public folder\n  function getData() {\n    fetch('/data/advisors_10000.csv')\n      .then((response) => response.text())\n      .then(csv => {\n\n        //split the data based on the line break, and remove the first row\n        const titles = csv.split('\\n').slice(0, 1);\n        const title = titles.split(';')\n\n        console.log(titles);\n        let titlesArray = [];\n        titles.forEach(element => {\n          const title = element.split(';');\n          titlesArray.push(title)\n        })\n\n        setTableTitles(titlesArray)\n\n        const advisors = csv.split('\\n').slice(1);\n\n        //array to save all the objects in\n        const advisorsArray = [];\n\n        //split the rows into each one of the fields\n\n        advisors.forEach(element => {\n          const advisorData = element.split(';')\n          let advisor = {\n            id: uuidv4(),\n            Bedrijfsnaam: advisorData[0],\n            Adres: advisorData[1],\n            Postcode: advisorData[2],\n            Woonplaats: advisorData[3],\n            Website: advisorData[4]\n          }\n          advisorsArray.push(advisor)\n        });\n\n        //set the array\n        setAdvisorsArray(advisorsArray)\n\n      })\n  }\n\n\n\n  useEffect(() => {\n    getData()\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* <button onClick={() => getData()}>Getdata</button> */}\n      <SearchComponent />\n      <ListOfEntries tableTitles={tableTitles} advisorsArray={advisorsArray} />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}