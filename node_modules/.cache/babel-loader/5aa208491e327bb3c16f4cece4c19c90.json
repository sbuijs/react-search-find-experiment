{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { SearchComponent } from './components/SearchComponent';\nimport { Advisors } from './components/Advisors';\nimport { Loader } from './components/Loader';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [advisorsArray, setAdvisorsArray] = useState([]);\n  const [tableTitles, setTableTitles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  useEffect(() => {\n    // only works when the file is in the public folder\n    const getData = async () => {\n      setLoading(true);\n      console.log(loading);\n      fetch('/data/advisors_10000--original.csv').then(response => response.text()).then(csv => {\n        //get the titles from the first row of the csv file \n        //for the purpose of creating the titles of the table columns\n        const titles = csv.split('\\n').slice(0, 1);\n        let titlesArray = [];\n        titles.forEach(element => {\n          const titleElement = element.split(';');\n          titleElement.forEach(element => {\n            const title = {\n              id: uuidv4(),\n              title: element\n            };\n            titlesArray.push(title);\n          });\n        });\n        setTableTitles(titlesArray); //getting the advisors from the cv file\n        //and split the rows into each one of the fields\n\n        const advisors = csv.split('\\n').slice(1);\n        const advisorsArray = [];\n        advisors.forEach(element => {\n          const advisorData = element.split(';');\n          let advisor = {\n            id: uuidv4(),\n            Bedrijfsnaam: advisorData[0],\n            Adres: advisorData[1],\n            Postcode: advisorData[2],\n            Woonplaats: advisorData[3],\n            Website: advisorData[4]\n          };\n          advisorsArray.push(advisor);\n        });\n        setAdvisorsArray(advisorsArray);\n      });\n      setLoading(false);\n    };\n\n    setTimeout(() => {\n      getData();\n      console.log('Hello, World!');\n    }, 3000);\n  }, [loading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchComponent, {\n      searchQuery: searchQuery,\n      setSearchQuery: setSearchQuery,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Advisors, {\n      loading: loading,\n      searchQuery: searchQuery,\n      tableTitles: tableTitles,\n      advisorsArray: advisorsArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UetmnW8zEyZLQY5R2g3Mj0jgLfs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js"],"names":["SearchComponent","Advisors","Loader","useState","useEffect","v4","uuidv4","App","advisorsArray","setAdvisorsArray","tableTitles","setTableTitles","loading","setLoading","searchQuery","setSearchQuery","getData","console","log","fetch","then","response","text","csv","titles","split","slice","titlesArray","forEach","element","titleElement","title","id","push","advisors","advisorData","advisor","Bedrijfsnaam","Adres","Postcode","Woonplaats","Website","setTimeout"],"mappings":"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","sourcesContent":["import './App.css';\nimport { SearchComponent } from './components/SearchComponent';\nimport { Advisors } from './components/Advisors';\nimport { Loader } from './components/Loader';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n\n  const [advisorsArray, setAdvisorsArray] = useState([]);\n  const [tableTitles, setTableTitles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n\n  useEffect(() => {\n    // only works when the file is in the public folder\n    const getData = async () => {\n      setLoading(true)\n      console.log(loading);\n      fetch('/data/advisors_10000--original.csv')\n        .then((response) => response.text())\n        .then(csv => {\n\n          //get the titles from the first row of the csv file \n          //for the purpose of creating the titles of the table columns\n          const titles = csv.split('\\n').slice(0, 1);\n          let titlesArray = [];\n          titles.forEach(element => {\n            const titleElement = element.split(';');\n            titleElement.forEach(element => {\n              const title = {\n                id: uuidv4(),\n                title: element\n              }\n              titlesArray.push(title)\n            })\n          });\n          setTableTitles(titlesArray)\n\n\n          //getting the advisors from the cv file\n          //and split the rows into each one of the fields\n          const advisors = csv.split('\\n').slice(1);\n          const advisorsArray = [];\n\n          advisors.forEach(element => {\n            const advisorData = element.split(';')\n            let advisor = {\n              id: uuidv4(),\n              Bedrijfsnaam: advisorData[0],\n              Adres: advisorData[1],\n              Postcode: advisorData[2],\n              Woonplaats: advisorData[3],\n              Website: advisorData[4]\n            }\n            advisorsArray.push(advisor)\n\n          });\n          setAdvisorsArray(advisorsArray)\n        })\n      setLoading(false)\n    }\n    setTimeout(() => {\n      getData()\n      console.log('Hello, World!')\n    }, 3000);\n\n  }, [loading]);\n\n  return (\n    <div className=\"App\">\n      {/* <FilterTest setTestSearchQuery={setTestSearchQuery} testSearchQuer={testSearchQuery} advisorsArray={advisorsArray} /> */}\n\n      <SearchComponent searchQuery={searchQuery} setSearchQuery={setSearchQuery} loading={loading} />\n      <Advisors loading={loading} searchQuery={searchQuery} tableTitles={tableTitles} advisorsArray={advisorsArray} />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}