{"ast":null,"code":"import { v4 as uuidv4 } from 'uuid';\nexport const fetchAliases = () => {\n  return fetch('/data/aliasses_2021-12-06-075438_helz.csv').then(response => response.text()).then(csv => {\n    const rawAliasses = csv.split('\\n');\n    const parsedAliasses = [];\n    rawAliasses.forEach(element => {\n      const data = element.split(',');\n      let city = {\n        alias: data[0],\n        original: data[1]\n      };\n      parsedAliasses.push(city);\n    });\n    return parsedAliasses;\n  });\n};\nexport const fetchAdvisors = () => {\n  return fetch('/data/advisors_10000--original.csv').then(response => response.text()).then(csv => {\n    //get advisors > split the rows into each one of the fields\n    const rawAdvisors = csv.split('\\n').slice(1);\n    const parsedAdvisors = []; //save every advisor and add it to the advisorsArray\n\n    rawAdvisors.forEach(element => {\n      const advisorData = element.split(';');\n      let advisor = {\n        id: uuidv4(),\n        Bedrijfsnaam: advisorData[0],\n        Adres: {\n          Straatnaam: advisorData[1],\n          //remove spces from postcode\n          Postcode: advisorData[2].replace(/\\s+/g, ''),\n          Woonplaats: advisorData[3]\n        },\n        Website: {\n          Naam: advisorData[4].replace(\"https://www.\", '').replace(\"http://www.\", ''),\n          Url: advisorData[4]\n        }\n      };\n      console.log(typeof advisor.Adres.Woonplaats);\n      parsedAdvisors.push(advisor);\n    });\n    return parsedAdvisors;\n  });\n};","map":{"version":3,"sources":["/Users/steef/Documents/Github-sbuijs/react-search-find-experiment/src/data/userRepository.js"],"names":["v4","uuidv4","fetchAliases","fetch","then","response","text","csv","rawAliasses","split","parsedAliasses","forEach","element","data","city","alias","original","push","fetchAdvisors","rawAdvisors","slice","parsedAdvisors","advisorData","advisor","id","Bedrijfsnaam","Adres","Straatnaam","Postcode","replace","Woonplaats","Website","Naam","Url","console","log"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,SAAOC,KAAK,CAAC,2CAAD,CAAL,CACFC,IADE,CACIC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADjB,EAEFF,IAFE,CAEGG,GAAG,IAAI;AAET,UAAMC,WAAW,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,CAApB;AACA,UAAMC,cAAc,GAAG,EAAvB;AAEAF,IAAAA,WAAW,CAACG,OAAZ,CAAoBC,OAAO,IAAI;AAC3B,YAAMC,IAAI,GAAGD,OAAO,CAACH,KAAR,CAAc,GAAd,CAAb;AAEA,UAAIK,IAAI,GAAG;AACPC,QAAAA,KAAK,EAAEF,IAAI,CAAC,CAAD,CADJ;AAEPG,QAAAA,QAAQ,EAAEH,IAAI,CAAC,CAAD;AAFP,OAAX;AAIAH,MAAAA,cAAc,CAACO,IAAf,CAAoBH,IAApB;AACH,KARD;AASA,WAAOJ,cAAP;AACH,GAjBE,CAAP;AAkBH,CAnBM;AAqBP,OAAO,MAAMQ,aAAa,GAAG,MAAM;AAC/B,SAAOf,KAAK,CAAC,oCAAD,CAAL,CACFC,IADE,CACIC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADjB,EAEFF,IAFE,CAEGG,GAAG,IAAI;AAET;AACA,UAAMY,WAAW,GAAGZ,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgBW,KAAhB,CAAsB,CAAtB,CAApB;AACA,UAAMC,cAAc,GAAG,EAAvB,CAJS,CAMT;;AACAF,IAAAA,WAAW,CAACR,OAAZ,CAAoBC,OAAO,IAAI;AAC3B,YAAMU,WAAW,GAAGV,OAAO,CAACH,KAAR,CAAc,GAAd,CAApB;AACA,UAAIc,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAEvB,MAAM,EADA;AAEVwB,QAAAA,YAAY,EAAEH,WAAW,CAAC,CAAD,CAFf;AAGVI,QAAAA,KAAK,EAAE;AACHC,UAAAA,UAAU,EAAEL,WAAW,CAAC,CAAD,CADpB;AAEH;AACAM,UAAAA,QAAQ,EAAEN,WAAW,CAAC,CAAD,CAAX,CAAeO,OAAf,CAAuB,MAAvB,EAA+B,EAA/B,CAHP;AAIHC,UAAAA,UAAU,EAAER,WAAW,CAAC,CAAD;AAJpB,SAHG;AASVS,QAAAA,OAAO,EAAE;AACLC,UAAAA,IAAI,EAAEV,WAAW,CAAC,CAAD,CAAX,CAAeO,OAAf,CAAuB,cAAvB,EAAuC,EAAvC,EAA2CA,OAA3C,CAAmD,aAAnD,EAAkE,EAAlE,CADD;AAELI,UAAAA,GAAG,EAAEX,WAAW,CAAC,CAAD;AAFX;AATC,OAAd;AAcAY,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAOZ,OAAO,CAACG,KAAR,CAAcI,UAAjC;AAEAT,MAAAA,cAAc,CAACJ,IAAf,CAAoBM,OAApB;AACH,KAnBD;AAoBA,WAAOF,cAAP;AACH,GA9BE,CAAP;AA+BH,CAhCM","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\n\nexport const fetchAliases = () => {\n    return fetch('/data/aliasses_2021-12-06-075438_helz.csv')\n        .then((response) => response.text())\n        .then(csv => {\n\n            const rawAliasses = csv.split('\\n');\n            const parsedAliasses = [];\n\n            rawAliasses.forEach(element => {\n                const data = element.split(',')\n\n                let city = {\n                    alias: data[0],\n                    original: data[1]\n                }\n                parsedAliasses.push(city)\n            });\n            return parsedAliasses;\n        })\n}\n\nexport const fetchAdvisors = () => {\n    return fetch('/data/advisors_10000--original.csv')\n        .then((response) => response.text())\n        .then(csv => {\n\n            //get advisors > split the rows into each one of the fields\n            const rawAdvisors = csv.split('\\n').slice(1);\n            const parsedAdvisors = [];\n\n            //save every advisor and add it to the advisorsArray\n            rawAdvisors.forEach(element => {\n                const advisorData = element.split(';')\n                let advisor = {\n                    id: uuidv4(),\n                    Bedrijfsnaam: advisorData[0],\n                    Adres: {\n                        Straatnaam: advisorData[1],\n                        //remove spces from postcode\n                        Postcode: advisorData[2].replace(/\\s+/g, ''),\n                        Woonplaats: advisorData[3],\n                    },\n                    Website: {\n                        Naam: advisorData[4].replace(\"https://www.\", '').replace(\"http://www.\", ''),\n                        Url: advisorData[4],\n                    }\n                }\n                console.log(typeof advisor.Adres.Woonplaats);\n\n                parsedAdvisors.push(advisor)\n            });\n            return parsedAdvisors;\n        })\n}\n\n\n"]},"metadata":{},"sourceType":"module"}