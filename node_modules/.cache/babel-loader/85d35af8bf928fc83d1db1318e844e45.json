{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { SearchComponent } from './components/SearchComponent';\nimport { ListOfEntries } from './components/ListOfEntries';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [advisorsArray, setAdvisorsArray] = useState([]); // only works when the file is in the public folder\n\n  function getData() {\n    fetch('/data/advisors_10000.csv').then(response => response.text()).then(csv => {\n      //split the data based on the line break, and remove the first row\n      const advisors = csv.split('\\n').slice(1);\n      const advisorsArray = []; //split the rows into each one of the fields\n\n      advisors.forEach(element => {\n        const advisorData = element.split(';');\n        const advisor = {\n          bedrijfsnaam: advisorData[0],\n          adres: advisorData[1]\n        };\n        console.log(advisorData);\n        advisorsArray.push(advisorData);\n      });\n      console.log(advisorsArray);\n      setAdvisorsArray(advisorsArray);\n    });\n  } // const advisorInfos = () => {\n  //   let advisorInfos =[]\n  //   advisors.forEach(element => {\n  //   });\n  //   bedrijfsnaam: advisorData[0],\n  // }\n  //manually parsing the code\n  // D3 and P5.js are libraries that parse for you\n  //the thing is now a text string, we can take the text and split it into different elements of an array\n  //first split the rows, then split the columns. \n  //The thing that separates the things is a line break.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => getData(),\n      children: \"Getdata\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListOfEntries, {\n      advisorsArray: advisorsArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"OsUDHJ3JnD/1YG/AFIiwVn2Gc8c=\");\n\n_c = App;\nexport default App; // import DATA from './data/advisors_10000.csv';\n// const DATA_ARRAY = [];\n// async function getData() {\n//   const response = await fetch(DATA, {\n//     headers: {\n//       'content-type': 'text/csv;charset=UTF-8'\n//     }\n//   })\n//     .catch(function () {\n//       console.log(\"error\");\n//     });\n//   const data = await response.text();\n//   // console.log(data);\n//   const rows = data.split((/\\r?\\n|\\r/)).slice(1);\n//   // console.log(rows[1]);\n//   rows.forEach(elt => {\n//     const colums = elt.split(';');\n//     const titre = colums[0];\n//     // console.log(titre);\n//     DATA_ARRAY.push(titre);\n//   })\n//   console.log(DATA_ARRAY);\n// }\n// getData();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js"],"names":["SearchComponent","ListOfEntries","useState","App","advisorsArray","setAdvisorsArray","getData","fetch","then","response","text","csv","advisors","split","slice","forEach","element","advisorData","advisor","bedrijfsnaam","adres","console","log","push"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,eAAT,QAAgC,8BAAhC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,QAAQ,CAAC,EAAD,CAAlD,CAFa,CAKb;;AACA,WAASI,OAAT,GAAmB;AACjBC,IAAAA,KAAK,CAAC,0BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,GAAG,IAAI;AAEX;AACA,YAAMC,QAAQ,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgBC,KAAhB,CAAsB,CAAtB,CAAjB;AAGA,YAAMV,aAAa,GAAG,EAAtB,CANW,CAOX;;AACAQ,MAAAA,QAAQ,CAACG,OAAT,CAAiBC,OAAO,IAAI;AAC1B,cAAMC,WAAW,GAAGD,OAAO,CAACH,KAAR,CAAc,GAAd,CAApB;AACA,cAAMK,OAAO,GAAG;AACdC,UAAAA,YAAY,EAAEF,WAAW,CAAC,CAAD,CADX;AAEdG,UAAAA,KAAK,EAAEH,WAAW,CAAC,CAAD;AAFJ,SAAhB;AAMAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ;AAEAb,QAAAA,aAAa,CAACmB,IAAd,CAAmBN,WAAnB;AACD,OAXD;AAYAI,MAAAA,OAAO,CAACC,GAAR,CAAYlB,aAAZ;AACAC,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,KAxBH;AAyBD,GAhCY,CAkCb;AACA;AACA;AAEA;AACA;AACA;AAUA;AACA;AAEA;AACA;AAEA;;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BAEE;AAAQ,MAAA,OAAO,EAAE,MAAME,OAAO,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,aAAD;AAAe,MAAA,aAAa,EAAEF;AAA9B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAxEQD,G;;KAAAA,G;AA0ET,eAAeA,GAAf,C,CAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA","sourcesContent":["import './App.css';\nimport { SearchComponent } from './components/SearchComponent'\nimport { ListOfEntries } from './components/ListOfEntries';\nimport { useState } from 'react';\n\n\n\nfunction App() {\n\n  const [advisorsArray, setAdvisorsArray] = useState([]);\n\n\n  // only works when the file is in the public folder\n  function getData() {\n    fetch('/data/advisors_10000.csv')\n      .then((response) => response.text())\n      .then(csv => {\n\n        //split the data based on the line break, and remove the first row\n        const advisors = csv.split('\\n').slice(1);\n\n\n        const advisorsArray = [];\n        //split the rows into each one of the fields\n        advisors.forEach(element => {\n          const advisorData = element.split(';')\n          const advisor = {\n            bedrijfsnaam: advisorData[0],\n            adres: advisorData[1]\n          }\n\n\n          console.log(advisorData);\n\n          advisorsArray.push(advisorData)\n        });\n        console.log(advisorsArray);\n        setAdvisorsArray(advisorsArray)\n      })\n  }\n\n  // const advisorInfos = () => {\n  //   let advisorInfos =[]\n  //   advisors.forEach(element => {\n\n  //   });\n  //   bedrijfsnaam: advisorData[0],\n  // }\n\n\n\n\n\n\n\n\n\n  //manually parsing the code\n  // D3 and P5.js are libraries that parse for you\n\n  //the thing is now a text string, we can take the text and split it into different elements of an array\n  //first split the rows, then split the columns. \n\n  //The thing that separates the things is a line break.\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n\n      <button onClick={() => getData()}>Getdata</button>\n      <SearchComponent />\n      <ListOfEntries advisorsArray={advisorsArray} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// import DATA from './data/advisors_10000.csv';\n// const DATA_ARRAY = [];\n\n// async function getData() {\n//   const response = await fetch(DATA, {\n//     headers: {\n//       'content-type': 'text/csv;charset=UTF-8'\n//     }\n//   })\n//     .catch(function () {\n//       console.log(\"error\");\n//     });\n\n\n//   const data = await response.text();\n//   // console.log(data);\n\n//   const rows = data.split((/\\r?\\n|\\r/)).slice(1);\n//   // console.log(rows[1]);\n//   rows.forEach(elt => {\n//     const colums = elt.split(';');\n//     const titre = colums[0];\n//     // console.log(titre);\n//     DATA_ARRAY.push(titre);\n\n//   })\n\n//   console.log(DATA_ARRAY);\n// }\n\n// getData();\n"]},"metadata":{},"sourceType":"module"}