{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/components/Autocomplete.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Autocomplete = _ref => {\n  _s();\n\n  let {\n    suggestions\n  } = _ref;\n  const [filteredSuggestions, setFilteredSuggestions] = useState([]); //active suggestions\n\n  const [activeSuggestionsIndex, setActiveSuggestionsIndex] = useState(0); //list with results\n\n  const [showSuggestions, setShowSuggestions] = useState(false); //input form the field\n\n  const [input, setInput] = useState(\"\");\n\n  const onChange = e => {\n    // console.log('onchange function');\n    const userInput = e.target.value; // console.log(userInput);\n    // Filter our suggestions that don't contain the user's input\n\n    const unLinked = suggestions.filter(suggestion => suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1);\n    console.log(unLinked);\n    setInput(e.target.value);\n    setFilteredSuggestions(unLinked);\n    setActiveSuggestionsIndex(0);\n    setShowSuggestions(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"input: \", input]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"filteredSuggestions: \", filteredSuggestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"activeSuggestionsIndex: \", activeSuggestionsIndex]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"showSuggestions: \", showSuggestions]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      onChange: e => onChange(e),\n      type: \"text\",\n      placeholder: \"type a name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Autocomplete, \"3qrBC0tJM3aRPAun/4zW4wS1lho=\");\n\n_c = Autocomplete;\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/components/Autocomplete.js"],"names":["useState","Autocomplete","suggestions","filteredSuggestions","setFilteredSuggestions","activeSuggestionsIndex","setActiveSuggestionsIndex","showSuggestions","setShowSuggestions","input","setInput","onChange","e","userInput","target","value","unLinked","filter","suggestion","toLowerCase","indexOf","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,OAAO,MAAMC,YAAY,GAAG,QAAqB;AAAA;;AAAA,MAApB;AAAEC,IAAAA;AAAF,GAAoB;AAG7C,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAgDJ,QAAQ,CAAC,EAAD,CAA9D,CAH6C,CAI7C;;AACA,QAAM,CAACK,sBAAD,EAAyBC,yBAAzB,IAAsDN,QAAQ,CAAC,CAAD,CAApE,CAL6C,CAO7C;;AACA,QAAM,CAACO,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,KAAD,CAAtD,CAR6C,CAS7C;;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;;AAGA,QAAMW,QAAQ,GAAIC,CAAD,IAAO;AACpB;AACA,UAAMC,SAAS,GAAGD,CAAC,CAACE,MAAF,CAASC,KAA3B,CAFoB,CAGpB;AAEA;;AACA,UAAMC,QAAQ,GAAGd,WAAW,CAACe,MAAZ,CACZC,UAAD,IACIA,UAAU,CAACC,WAAX,GAAyBC,OAAzB,CAAiCP,SAAS,CAACM,WAAV,EAAjC,IAA4D,CAAC,CAFpD,CAAjB;AAIAE,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ;AACAN,IAAAA,QAAQ,CAACE,CAAC,CAACE,MAAF,CAASC,KAAV,CAAR;AACAX,IAAAA,sBAAsB,CAACY,QAAD,CAAtB;AACAV,IAAAA,yBAAyB,CAAC,CAAD,CAAzB;AACAE,IAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH,GAfD;;AAgBA,sBACI;AAAA,4BACI;AAAA,4BAAWC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,0CAAyBN,mBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,6CAA4BE,sBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,sCAAqBE,eAArB;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AACI,MAAA,QAAQ,EAAGK,CAAD,IAAOD,QAAQ,CAACC,CAAD,CAD7B;AACkC,MAAA,IAAI,EAAC,MADvC;AAC8C,MAAA,WAAW,EAAC;AAD1D;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AAWH,CAxCM;;GAAMX,Y;;KAAAA,Y","sourcesContent":["import { useState } from 'react';\n\nexport const Autocomplete = ({ suggestions }) => {\n\n\n    const [filteredSuggestions, setFilteredSuggestions] = useState([]);\n    //active suggestions\n    const [activeSuggestionsIndex, setActiveSuggestionsIndex] = useState(0);\n\n    //list with results\n    const [showSuggestions, setShowSuggestions] = useState(false);\n    //input form the field\n    const [input, setInput] = useState(\"\");\n\n\n    const onChange = (e) => {\n        // console.log('onchange function');\n        const userInput = e.target.value;\n        // console.log(userInput);\n\n        // Filter our suggestions that don't contain the user's input\n        const unLinked = suggestions.filter(\n            (suggestion) =>\n                suggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n        );\n        console.log(unLinked);\n        setInput(e.target.value);\n        setFilteredSuggestions(unLinked)\n        setActiveSuggestionsIndex(0)\n        setShowSuggestions(true)\n    }\n    return (\n        <>\n            <p>input: {input}</p>\n            <p>filteredSuggestions: {filteredSuggestions}</p>\n            <p>activeSuggestionsIndex: {activeSuggestionsIndex}</p>\n            <p>showSuggestions: {showSuggestions}</p>\n            <input\n                onChange={(e) => onChange(e)} type=\"text\" placeholder=\"type a name\"\n            />\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}