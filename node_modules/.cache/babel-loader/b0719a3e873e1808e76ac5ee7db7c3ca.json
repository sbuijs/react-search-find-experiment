{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { SearchComponent } from './components/SearchComponent';\nimport csv from './data/advisors_10000.csv';\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch('./data/advisors_10000.csv');\n      const reader = response.body.getReader();\n      const result = await reader.read(); // raw array\n\n      const decoder = new TextDecoder('utf-8');\n      const csv = decoder.decode(result.value); // the csv text\n\n      const results = Papa.parse(csv, {\n        header: true\n      }); // object with { data, errors, meta }\n\n      const rows = results.data; // array of objects\n\n      setRows(rows);\n    }\n\n    getData();\n    console.log(rows);\n  }, []); // [] means just do this once, after initial render\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(SearchComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js"],"names":["SearchComponent","csv","useState","useEffect","App","rows","setRows","getData","response","fetch","reader","body","getReader","result","read","decoder","TextDecoder","decode","value","results","Papa","parse","header","data","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,eAAT,QAAgC,8BAAhC;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,EAAD,CAAhC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeI,OAAf,GAAyB;AACvB,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2BAAD,CAA5B;AACA,YAAMC,MAAM,GAAGF,QAAQ,CAACG,IAAT,CAAcC,SAAd,EAAf;AACA,YAAMC,MAAM,GAAG,MAAMH,MAAM,CAACI,IAAP,EAArB,CAHuB,CAGY;;AACnC,YAAMC,OAAO,GAAG,IAAIC,WAAJ,CAAgB,OAAhB,CAAhB;AACA,YAAMf,GAAG,GAAGc,OAAO,CAACE,MAAR,CAAeJ,MAAM,CAACK,KAAtB,CAAZ,CALuB,CAKkB;;AACzC,YAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWpB,GAAX,EAAgB;AAAEqB,QAAAA,MAAM,EAAE;AAAV,OAAhB,CAAhB,CANuB,CAM2B;;AAClD,YAAMjB,IAAI,GAAGc,OAAO,CAACI,IAArB,CAPuB,CAOG;;AAC1BjB,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD;;AACDE,IAAAA,OAAO;AACPiB,IAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AACD,GAbQ,EAaN,EAbM,CAAT,CAJa,CAiBN;;AAGP,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAzBQD,G;;KAAAA,G;AA2BT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { SearchComponent } from './components/SearchComponent'\nimport csv from './data/advisors_10000.csv'\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [rows, setRows] = useState([]);\n\n\n  useEffect(() => {\n    async function getData() {\n      const response = await fetch('./data/advisors_10000.csv')\n      const reader = response.body.getReader()\n      const result = await reader.read() // raw array\n      const decoder = new TextDecoder('utf-8')\n      const csv = decoder.decode(result.value) // the csv text\n      const results = Papa.parse(csv, { header: true }) // object with { data, errors, meta }\n      const rows = results.data // array of objects\n      setRows(rows)\n    }\n    getData()\n    console.log(rows);\n  }, []) // [] means just do this once, after initial render\n\n\n  return (\n    <div className=\"App\">\n      <SearchComponent />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}