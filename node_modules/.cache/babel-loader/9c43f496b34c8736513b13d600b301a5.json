{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { SearchComponent } from './components/SearchComponent';\nimport { ListOfEntries } from './components/ListOfEntries';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [advisorsArray, setAdvisorsArray] = useState([]);\n  const [tableTitles, setTableTitles] = useState([]); // only works when the file is in the public folder\n\n  function getData() {\n    fetch('/data/advisors_10000.csv').then(response => response.text()).then(csv => {\n      //split the data based on the line break, and remove the first row\n      const titles = csv.split('\\n').slice(0, 1);\n      let titlesArray = [];\n      tileDeconstructed.forEach(element => {\n        const titleElement = element.split(';');\n        titlesArray.push(titleElement);\n      });\n      setTableTitles(titlesArray);\n      console.log(tableTitles);\n      const advisors = csv.split('\\n').slice(1);\n      console.log(advisors); //array to save all the objects in\n\n      const advisorsArray = []; //split the rows into each one of the fields\n\n      advisors.forEach(element => {\n        const advisorData = element.split(';');\n        let advisor = {\n          id: uuidv4(),\n          Bedrijfsnaam: advisorData[0],\n          Adres: advisorData[1],\n          Postcode: advisorData[2],\n          Woonplaats: advisorData[3],\n          Website: advisorData[4]\n        };\n        advisorsArray.push(advisor);\n      }); //set the array\n\n      setAdvisorsArray(advisorsArray);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [titles.map(function (title) {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        entry: advisor\n      }, advisor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(SearchComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListOfEntries, {\n      tableTitles: tableTitles,\n      advisorsArray: advisorsArray\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0jDR0h7bpGXOWO34NZ7Zu5jmqnI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js"],"names":["SearchComponent","ListOfEntries","useState","useEffect","v4","uuidv4","App","advisorsArray","setAdvisorsArray","tableTitles","setTableTitles","getData","fetch","then","response","text","csv","titles","split","slice","titlesArray","tileDeconstructed","forEach","element","titleElement","push","console","log","advisors","advisorData","advisor","id","Bedrijfsnaam","Adres","Postcode","Woonplaats","Website","map","title"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,eAAT,QAAgC,8BAAhC;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,EAAE,IAAIC,MAAf,QAA6B,MAA7B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,EAAD,CAA9C,CAHa,CAMb;;AACA,WAASS,OAAT,GAAmB;AACjBC,IAAAA,KAAK,CAAC,0BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,GAAG,IAAI;AAEX;AACA,YAAMC,MAAM,GAAGD,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgBC,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAAf;AAOA,UAAIC,WAAW,GAAG,EAAlB;AACAC,MAAAA,iBAAiB,CAACC,OAAlB,CAA0BC,OAAO,IAAI;AACnC,cAAMC,YAAY,GAAGD,OAAO,CAACL,KAAR,CAAc,GAAd,CAArB;AACAE,QAAAA,WAAW,CAACK,IAAZ,CAAiBD,YAAjB;AACD,OAHD;AAKAd,MAAAA,cAAc,CAACU,WAAD,CAAd;AAEAM,MAAAA,OAAO,CAACC,GAAR,CAAYlB,WAAZ;AAGA,YAAMmB,QAAQ,GAAGZ,GAAG,CAACE,KAAJ,CAAU,IAAV,EAAgBC,KAAhB,CAAsB,CAAtB,CAAjB;AAEAO,MAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ,EAvBW,CAwBX;;AACA,YAAMrB,aAAa,GAAG,EAAtB,CAzBW,CA2BX;;AAGAqB,MAAAA,QAAQ,CAACN,OAAT,CAAiBC,OAAO,IAAI;AAC1B,cAAMM,WAAW,GAAGN,OAAO,CAACL,KAAR,CAAc,GAAd,CAApB;AACA,YAAIY,OAAO,GAAG;AACZC,UAAAA,EAAE,EAAE1B,MAAM,EADE;AAEZ2B,UAAAA,YAAY,EAAEH,WAAW,CAAC,CAAD,CAFb;AAGZI,UAAAA,KAAK,EAAEJ,WAAW,CAAC,CAAD,CAHN;AAIZK,UAAAA,QAAQ,EAAEL,WAAW,CAAC,CAAD,CAJT;AAKZM,UAAAA,UAAU,EAAEN,WAAW,CAAC,CAAD,CALX;AAMZO,UAAAA,OAAO,EAAEP,WAAW,CAAC,CAAD;AANR,SAAd;AAQAtB,QAAAA,aAAa,CAACkB,IAAd,CAAmBK,OAAnB;AACD,OAXD,EA9BW,CA2CX;;AACAtB,MAAAA,gBAAgB,CAACD,aAAD,CAAhB;AAED,KAhDH;AAiDD;;AAIDJ,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,OAAO;AAER,GAHQ,EAGN,EAHM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eAEGM,MAAM,CAACoB,GAAP,CAAW,UAAUC,KAAV,EAAiB;AAC3B,0BACE,QAAC,QAAD;AAA2B,QAAA,KAAK,EAAER;AAAlC,SAAeA,OAAO,CAACC,EAAvB;AAAA;AAAA;AAAA;AAAA,cADF;AAGD,KAJA,CAFH,eAOE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE,QAAC,aAAD;AAAe,MAAA,WAAW,EAAEtB,WAA5B;AAAyC,MAAA,aAAa,EAAEF;AAAxD;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAhFQD,G;;KAAAA,G;AAkFT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { SearchComponent } from './components/SearchComponent'\nimport { ListOfEntries } from './components/ListOfEntries';\nimport { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction App() {\n\n  const [advisorsArray, setAdvisorsArray] = useState([]);\n  const [tableTitles, setTableTitles] = useState([]);\n\n\n  // only works when the file is in the public folder\n  function getData() {\n    fetch('/data/advisors_10000.csv')\n      .then((response) => response.text())\n      .then(csv => {\n\n        //split the data based on the line break, and remove the first row\n        const titles = csv.split('\\n').slice(0, 1);\n\n\n\n\n\n\n        let titlesArray = [];\n        tileDeconstructed.forEach(element => {\n          const titleElement = element.split(';');\n          titlesArray.push(titleElement)\n        });\n\n        setTableTitles(titlesArray)\n\n        console.log(tableTitles);\n\n\n        const advisors = csv.split('\\n').slice(1);\n\n        console.log(advisors);\n        //array to save all the objects in\n        const advisorsArray = [];\n\n        //split the rows into each one of the fields\n\n\n        advisors.forEach(element => {\n          const advisorData = element.split(';')\n          let advisor = {\n            id: uuidv4(),\n            Bedrijfsnaam: advisorData[0],\n            Adres: advisorData[1],\n            Postcode: advisorData[2],\n            Woonplaats: advisorData[3],\n            Website: advisorData[4]\n          }\n          advisorsArray.push(advisor)\n        });\n\n        //set the array\n        setAdvisorsArray(advisorsArray)\n\n      })\n  }\n\n\n\n  useEffect(() => {\n    getData()\n\n  }, []);\n\n\n\n  return (\n    <div className=\"App\">\n      {/* <button onClick={() => getData()}>Getdata</button> */}\n      {titles.map(function (title) {\n        return (\n          <TableRow key={advisor.id} entry={advisor} />\n        )\n      })}\n      <SearchComponent />\n      <ListOfEntries tableTitles={tableTitles} advisorsArray={advisorsArray} />\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}