{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/components/FilterTest.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const FilterTest = _ref => {\n  _s();\n\n  let {\n    advisorsArray\n  } = _ref;\n  const names = ['James', 'John', 'Paul', 'Ringo', 'George'];\n  console.log(names);\n  const [testInputSearch, setTestInputSearch] = useState(\"\");\n  const [testSearchQuery, setTestSearchQuery] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setTestSearchQuery(testInputSearch);\n    console.log(advisorsArray);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dit is de testInputSearch: \", testInputSearch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Dit is de searchQuery: \", testSearchQuery]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"search-form\",\n        onSubmit: value => handleSubmit(value),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: testInputSearch,\n          onChange: e => setTestInputSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), names.filter(person => person.includes(testSearchQuery)).map(filteredName => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: filteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilterTest, \"js++ks2v+qu60P4e4P1ul81rYVE=\");\n\n_c = FilterTest;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterTest\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/components/FilterTest.js"],"names":["useState","FilterTest","advisorsArray","names","console","log","testInputSearch","setTestInputSearch","testSearchQuery","setTestSearchQuery","handleSubmit","e","preventDefault","value","target","filter","person","includes","map","filteredName"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;AAEA,OAAO,MAAMC,UAAU,GAAG,QAAuB;AAAA;;AAAA,MAAtB;AAAEC,IAAAA;AAAF,GAAsB;AAE7C,QAAMC,KAAK,GAAG,CAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,QAAnC,CAAd;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAIA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAAC,EAAD,CAAtD;;AAEA,QAAMU,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,kBAAkB,CAACH,eAAD,CAAlB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACH,GAJD;;AAMA,sBACI;AAAA,4BACI;AAAA,8BACI;AAAA,kDAA+BI,eAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,8CAA2BE,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAM,QAAA,EAAE,EAAC,aAAT;AAAuB,QAAA,QAAQ,EAAEK,KAAK,IAAIH,YAAY,CAACG,KAAD,CAAtD;AAAA,+BACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,KAAK,EAAEP,eAA1B;AACI,UAAA,QAAQ,EAAEK,CAAC,IAAIJ,kBAAkB,CAACI,CAAC,CAACG,MAAF,CAASD,KAAV;AADrC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eASI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKV,KAAK,CAACY,MAAN,CAAaC,MAAM,IAAIA,MAAM,CAACC,QAAP,CAAgBT,eAAhB,CAAvB,EAAyDU,GAAzD,CAA6DC,YAAY,iBACtE;AAAA,kBAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ;AAAA,kBADJ;AAmBH,CAnCM;;GAAMlB,U;;KAAAA,U","sourcesContent":["import { useState } from 'react';\n\nexport const FilterTest = ({ advisorsArray }) => {\n\n    const names = ['James', 'John', 'Paul', 'Ringo', 'George'];\n    console.log(names);\n\n\n\n    const [testInputSearch, setTestInputSearch] = useState(\"\");\n    const [testSearchQuery, setTestSearchQuery] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setTestSearchQuery(testInputSearch)\n        console.log(advisorsArray);\n    }\n\n    return (\n        <>\n            <div>\n                <p>Dit is de testInputSearch: {testInputSearch}</p>\n                <p>Dit is de searchQuery: {testSearchQuery}</p>\n                <form id=\"search-form\" onSubmit={value => handleSubmit(value)}>\n                    <input type=\"text\" value={testInputSearch}\n                        onChange={e => setTestInputSearch(e.target.value)} />\n                </form>\n            </div>\n            <div>\n                <h2>Result</h2>\n                {names.filter(person => person.includes(testSearchQuery)).map(filteredName => (\n                    <p>{filteredName}</p>\n                ))}\n            </div>\n        </>\n\n    )\n}"]},"metadata":{},"sourceType":"module"}