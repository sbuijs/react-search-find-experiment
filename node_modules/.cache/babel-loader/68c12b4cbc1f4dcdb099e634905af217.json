{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/components/Pagination.js\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Pagination = _ref => {\n  let {\n    advisorsPerPage,\n    totalAdvisors,\n    currentPageNumber,\n    currentPage,\n    maxAmountPaginationPages\n  } = _ref;\n  const pageNumbers = []; //get the amount of page numbers\n\n  for (let i = 1; i <= Math.ceil(totalAdvisors / advisorsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  const paginate = (e, number) => {\n    e.preventDefault();\n    currentPageNumber(number);\n  };\n\n  const nextPage = () => {\n    currentPageNumber(currentPage + 1);\n  };\n\n  const prevPage = () => {\n    currentPageNumber(currentPage - 1);\n  };\n\n  const firstPage = () => {\n    return pageNumbers[pageNumbers.length - pageNumbers.length];\n  };\n\n  const lastPage = () => {\n    return pageNumbers[pageNumbers.length - 1];\n  }; //based on maxAmountPaginationPages generates array with pageItem numbers \n  //array will be used for maping and generating the pageitem buttons\n\n\n  const pageItems = () => {\n    //max amount of numbers on the left side\n    let maxNumberLeft = currentPage - Math.floor(maxAmountPaginationPages / 2);\n    let maxNumberRight = currentPage + Math.floor(maxAmountPaginationPages / 2);\n    let amountOfPages = lastPage(); //whan max left is smaller than 1\n\n    if (maxNumberLeft < 1) {\n      maxNumberLeft = 1; //keep the last number on the amount of the paginanation pages\n\n      maxNumberRight = maxAmountPaginationPages;\n    }\n\n    if (maxNumberRight > amountOfPages) {\n      maxNumberLeft = amountOfPages - (maxAmountPaginationPages - 1);\n\n      if (maxNumberLeft < 1) {\n        maxNumberLeft = 1;\n      }\n\n      maxNumberRight = amountOfPages;\n    } //array that contains the pagenumbers that need to be visible\n\n\n    const visiblePageNumbers = [];\n\n    for (var i = maxNumberLeft; i <= maxNumberRight; i++) {\n      visiblePageNumbers.push(i);\n    }\n\n    return visiblePageNumbers;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"Page navigation\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"pagination justify-content-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item page-item--first \n                            ${currentPage === firstPage() ? 'disabled opacity-0' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"#next\",\n            onClick: e => paginate(e, firstPage),\n            children: \"Eerste\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item page-item--prev \n                            ${currentPage === 1 ? 'disabled opacity-0' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"#prev\",\n            onClick: () => prevPage(),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"icon\",\n              icon: faArrowLeft\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item page-item disabled \n                            ${pageItems()[0] === 1 ? 'opacity-0' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-link page-link--dots\",\n            href: \"#next\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-item-group d-flex\",\n          children: pageItems().map((number, i) => {\n            i++;\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `page-item \n                                        ${currentPage === number ? \" active\" : \"\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `#${i}`,\n                className: `page-link `,\n                onClick: e => paginate(e, number),\n                children: number\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 37\n              }, this)\n            }, number, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item disabled \n                            ${pageItems()[maxAmountPaginationPages - 1] === lastPage() ? 'opacity-0' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page-link page-link--dots\",\n            href: \"#next\",\n            children: \"...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item page-item--next \n                            ${currentPage === pageNumbers[pageNumbers.length - 1] ? 'disabled opacity-0' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"#next\",\n            onClick: () => nextPage(),\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              className: \"icon\",\n              icon: faArrowRight\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          className: `page-item page-item--last \n                        ${currentPage === lastPage() ? 'disabled opacity-0' : ''}`,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"page-link\",\n            href: \"#next\",\n            onClick: e => paginate(e, lastPage),\n            children: \"Laatste\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/components/Pagination.js"],"names":["FontAwesomeIcon","faArrowLeft","faArrowRight","Pagination","advisorsPerPage","totalAdvisors","currentPageNumber","currentPage","maxAmountPaginationPages","pageNumbers","i","Math","ceil","push","paginate","e","number","preventDefault","nextPage","prevPage","firstPage","length","lastPage","pageItems","maxNumberLeft","floor","maxNumberRight","amountOfPages","visiblePageNumbers","map"],"mappings":"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","sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\n\nexport const Pagination = ({\n    advisorsPerPage,\n    totalAdvisors,\n    currentPageNumber,\n    currentPage,\n    maxAmountPaginationPages }) => {\n    const pageNumbers = [];\n\n\n    //get the amount of page numbers\n    for (let i = 1; i <= Math.ceil(totalAdvisors / advisorsPerPage); i++) {\n        pageNumbers.push(i)\n\n    }\n    const paginate = (e, number) => {\n        e.preventDefault()\n        currentPageNumber(number)\n    }\n\n    const nextPage = () => {\n        currentPageNumber(currentPage + 1)\n    }\n\n    const prevPage = () => {\n        currentPageNumber(currentPage - 1)\n    }\n\n    const firstPage = () => {\n        return pageNumbers[pageNumbers.length - pageNumbers.length]\n    }\n\n    const lastPage = () => {\n        return pageNumbers[pageNumbers.length - 1]\n    }\n\n\n    //based on maxAmountPaginationPages generates array with pageItem numbers \n    //array will be used for maping and generating the pageitem buttons\n    const pageItems = () => {\n        //max amount of numbers on the left side\n        let maxNumberLeft =\n            (currentPage - Math.floor(maxAmountPaginationPages / 2))\n        let maxNumberRight =\n            (currentPage + Math.floor(maxAmountPaginationPages / 2))\n        let amountOfPages = lastPage()\n\n        //whan max left is smaller than 1\n        if (maxNumberLeft < 1) {\n            maxNumberLeft = 1\n            //keep the last number on the amount of the paginanation pages\n            maxNumberRight = maxAmountPaginationPages\n        }\n\n        if (maxNumberRight > amountOfPages) {\n            maxNumberLeft = amountOfPages - (maxAmountPaginationPages - 1)\n\n            if (maxNumberLeft < 1) {\n                maxNumberLeft = 1\n            }\n            maxNumberRight = amountOfPages\n        }\n\n        //array that contains the pagenumbers that need to be visible\n        const visiblePageNumbers = [];\n        for (var i = maxNumberLeft; i <= maxNumberRight; i++) {\n            visiblePageNumbers.push(i);\n        }\n        return visiblePageNumbers\n    }\n\n\n    return (\n        <>\n            <nav aria-label=\"Page navigation\">\n                <ul className=\"pagination justify-content-center\">\n\n                    <li className={`page-item page-item--first \n                            ${((currentPage === firstPage()) ?\n                            'disabled opacity-0' : '')}`}>\n                        <a\n                            className=\"page-link\"\n                            href=\"#next\"\n                            onClick={(e) => paginate(e, firstPage)}>\n                            Eerste\n                        </a>\n                    </li>\n\n                    <li className={`page-item page-item--prev \n                            ${(currentPage === 1) ?\n                            'disabled opacity-0' : ''}`}>\n                        <a\n                            className=\"page-link\"\n                            href=\"#prev\"\n                            onClick={() => prevPage()}>\n                            <FontAwesomeIcon\n                                className=\"icon\"\n                                icon={faArrowLeft}\n                            />\n                        </a>\n                    </li>\n\n                    <li className={`page-item page-item disabled \n                            ${(pageItems()[0] === 1) ?\n                            'opacity-0' : ''}`}>\n                        <div\n                            className=\"page-link page-link--dots\"\n                            href=\"#next\">\n                            ...\n                        </div>\n                    </li>\n\n                    <div className='page-item-group d-flex'>\n                        {pageItems().map((number, i) => {\n                            i++;\n                            return (\n                                <li\n                                    key={number}\n                                    className={`page-item \n                                        ${currentPage === number ?\n                                            \" active\" : \"\"}`}>\n                                    <a\n                                        href={`#${i}`}\n                                        className={`page-link `}\n                                        onClick={(e) =>\n                                            paginate(e, number)}>{number}\n                                    </a>\n                                </li>\n                            )\n                        })}\n                    </div>\n\n                    <li className={`page-item disabled \n                            ${(pageItems()[maxAmountPaginationPages - 1]\n                            === lastPage()) ?\n                            'opacity-0' : ''}`}>\n                        <div className=\"page-link page-link--dots\" href=\"#next\" >\n                            ...\n                        </div>\n                    </li>\n\n                    <li className={`page-item page-item--next \n                            ${(currentPage === (pageNumbers[pageNumbers.length - 1]) ?\n                            'disabled opacity-0' : '')}`}>\n                        <a\n                            className=\"page-link\"\n                            href=\"#next\"\n                            onClick={() => nextPage()}\n                        >\n                            <FontAwesomeIcon\n                                className=\"icon\"\n                                icon={faArrowRight}\n                            />\n                        </a>\n                    </li>\n\n                    <li className={`page-item page-item--last \n                        ${((currentPage === lastPage()) ?\n                            'disabled opacity-0' : '')}`}>\n                        <a\n                            className=\"page-link\"\n                            href=\"#next\"\n                            onClick={(e) => paginate(e, lastPage)} >\n                            Laatste\n                        </a>\n                    </li>\n\n                </ul>\n            </nav>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}