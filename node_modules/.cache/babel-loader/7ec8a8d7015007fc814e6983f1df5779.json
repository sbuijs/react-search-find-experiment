{"ast":null,"code":"var _jsxFileName = \"/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js\";\nimport './App.css';\nimport { SearchComponent } from './components/SearchComponent';\nimport data from './data/data.json';\nimport { ListOfEntries } from './components/ListOfEntries'; // import { useState } from 'react';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  // const [dataArray, setDataArray] = useState([]);\n  // only works when the file is in the public folder\n  function getData() {\n    fetch('/data/advisors_10000.csv').then(response => response.text()).then(csv => {\n      console.log(csv);\n      const rows = csv.split('\\n');\n      console.log(rows);\n    });\n  }\n\n  getData(); //manually parsing the code\n  // D3 and P5.js are libraries that parse for you\n  //the thing is now a text string, we can take the text and split it into different elements of an array\n  //first split the rows, then split the columns. \n  //The thing that separates the things is a line break.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(SearchComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ListOfEntries, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App; // import DATA from './data/advisors_10000.csv';\n// const DATA_ARRAY = [];\n// async function getData() {\n//   const response = await fetch(DATA, {\n//     headers: {\n//       'content-type': 'text/csv;charset=UTF-8'\n//     }\n//   })\n//     .catch(function () {\n//       console.log(\"error\");\n//     });\n//   const data = await response.text();\n//   // console.log(data);\n//   const rows = data.split((/\\r?\\n|\\r/)).slice(1);\n//   // console.log(rows[1]);\n//   rows.forEach(elt => {\n//     const colums = elt.split(';');\n//     const titre = colums[0];\n//     // console.log(titre);\n//     DATA_ARRAY.push(titre);\n//   })\n//   console.log(DATA_ARRAY);\n// }\n// getData();\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/steef/Documents/Fonk-learning/search-find-experiment/src/App.js"],"names":["SearchComponent","data","ListOfEntries","App","getData","fetch","then","response","text","csv","console","log","rows","split"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,eAAT,QAAgC,8BAAhC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,aAAT,QAA8B,4BAA9B,C,CACA;;;;AAIA,SAASC,GAAT,GAAe;AAEb;AAGA;AACA,WAASC,OAAT,GAAmB;AACjBC,IAAAA,KAAK,CAAC,0BAAD,CAAL,CACGC,IADH,CACSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADtB,EAEGF,IAFH,CAEQG,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMG,IAAI,GAAGH,GAAG,CAACI,KAAJ,CAAU,IAAV,CAAb;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACD,KANH;AAOD;;AACDR,EAAAA,OAAO,GAfM,CAkBb;AACA;AAEA;AACA;AAEA;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,4BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEH;AAArB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;KAtCQE,G;AAwCT,eAAeA,GAAf,C,CAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA","sourcesContent":["import './App.css';\nimport { SearchComponent } from './components/SearchComponent'\nimport data from './data/data.json';\nimport { ListOfEntries } from './components/ListOfEntries';\n// import { useState } from 'react';\n\n\n\nfunction App() {\n\n  // const [dataArray, setDataArray] = useState([]);\n\n\n  // only works when the file is in the public folder\n  function getData() {\n    fetch('/data/advisors_10000.csv')\n      .then((response) => response.text())\n      .then(csv => {\n        console.log(csv);\n        const rows = csv.split('\\n');\n        console.log(rows);\n      })\n  }\n  getData()\n\n\n  //manually parsing the code\n  // D3 and P5.js are libraries that parse for you\n\n  //the thing is now a text string, we can take the text and split it into different elements of an array\n  //first split the rows, then split the columns. \n\n  //The thing that separates the things is a line break.\n\n\n\n\n\n\n\n  return (\n    <div className=\"App\">\n      <SearchComponent />\n      <ListOfEntries data={data} />\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n// import DATA from './data/advisors_10000.csv';\n// const DATA_ARRAY = [];\n\n// async function getData() {\n//   const response = await fetch(DATA, {\n//     headers: {\n//       'content-type': 'text/csv;charset=UTF-8'\n//     }\n//   })\n//     .catch(function () {\n//       console.log(\"error\");\n//     });\n\n\n//   const data = await response.text();\n//   // console.log(data);\n\n//   const rows = data.split((/\\r?\\n|\\r/)).slice(1);\n//   // console.log(rows[1]);\n//   rows.forEach(elt => {\n//     const colums = elt.split(';');\n//     const titre = colums[0];\n//     // console.log(titre);\n//     DATA_ARRAY.push(titre);\n\n//   })\n\n//   console.log(DATA_ARRAY);\n// }\n\n// getData();\n"]},"metadata":{},"sourceType":"module"}